service: tincture-api
org: ephemeralin
app: tincture-api

custom:
  rssFeedsTableName: 'tin-rssFeeds-${self:provider.stage}'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
        Resource:
          - { "Fn::GetAtt": ["RssFeedsDynamoDBTable", "Arn" ] }
  environment:
    RSS_FEEDS_TABLE_NAME: ${self:custom.rssFeedsTableName}

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  feedRetriever:
    handler: com.ephemeralin.api.AllFeedsExtractor
  #    events:
  #      - schedule: rate(1 minute)
  listRssFeeds:
    handler: com.ephemeralin.api.ListRssFeedsHandler
    events:
      - http:
          path: /feeds
          method: get
  getRssFeed:
    handler: com.ephemeralin.api.GetRssFeedHandler
    events:
      - http:
          path: /feeds/{feedName}
          method: get
#  createRssEntry:
#    handler: com.ephemeralin.CreateRssEntryHandler
#    events:
#      - http:
#          path: /entries
#          method: post
#  deleteRssEntry:
#    handler: com.ephemeralin.api.DeleteRssFeedHandler
#    events:
#      - http:
#          path: /feeds/{id}
#          method: delete

#  CloudFormation resource templates
resources:
  Resources:
    RssFeedsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.rssFeedsTableName}
        KeySchema:
          - AttributeName: feedName
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: feedName
            AttributeType: S
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1